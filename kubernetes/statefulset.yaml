
###################################################
##                                               ##
##                 Statefulset                   ##
##                                               ##
###################################################

# Statefulset es un controlador de k8s que se usa para manejar y mantener unos o mas
# pods. Lo que lo diferencia de un Deployment (o cualquier otro controller como ReplicaSet).
# Es su persistencia, a diferencia de un Deployment, un Statefulset mantiene una identidad
# persistente por cada uno de sus Pods.
#
# StatefulSet son ideales para aplicaciones que requieren...
#
#  - Network identifiers unicos y estables
#  - Almacenamiento persistente
#  - Deployment y escalado ordenado 
#  - Rolling updated automatizadas y ordenadas
#
#      - Ordenado significa que la creacion, actualizacion y eliminacion de los Pods -
#                   se hace de manera secuencial, y controlada. 

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  serviceName: "nginx"
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels: 
        app: nginx
    spec:
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:

    # El campo volumeClaimTemplates se usa para crear un PersistentVolumeClaim
    # para cada pod del Statefulset.
    #
    # Un PV (Persistent Volume), es un objecto que deja que los pods accecen a un 
    # persistente storage device, este esta definido por K8s StorageClass.
    #
    # A diferencia de un volume normal, que son transitorios y se eliminan cuando el pod se elimina,
    # un PV es persistente y puede ser reutilizado por otros pods.
    #
    # Un PVC (Persistent Volume Claim) es una peticion de almacenamiento persistente.
  
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

---
#########################################################################
##                                                                     ##
##            Exponiendo un Statefulset (Headless Service)             ##
##                                                                     ##
#########################################################################

# Un k8s service acuta como una abstraction layer, en aplicaciones stateless, como un webserver de nginx,
# el cliente no le importa que pod esta sirviendo la peticion. La coneccion llega al Service, y este lo redirige
# a cualquier backend pod.
# 
# En aplicaciones stateful, como una base de datos, el cliente si le importa que pod esta sirviendo la peticion.
# Statefulset hace uso de un tipo especial de servicio llamado "Headless Service". 
# 
# Un servicio headless en Kubernetes es un tipo de servicio que no tiene un CLusterIP, lo que significa que no actúa como 
# un loadbalancer o un stable IP entry point para acceder a un conjunto de pods. 
# En su lugar, permite el acceso directo a los pods individuales, proporcionando 
# un mayor control sobre cómo se distribuye el tráfico.
# 
# https://www.linkedin.com/posts/jack-liu-b73b7b2a8_headless-service-in-kubernetes-a-headless-activity-7211615318547345409-qdgg/
# https://stackoverflow.com/questions/52707840/what-is-a-headless-service-what-does-it-do-accomplish-and-what-are-some-legiti

apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  clusterIP: None
  selector:
    app: nginx
  ports:
  - port: 80
    name: web